import json
from os.path import join

from deepburtsev.core.pipelinemanager import PipelineManager
from deepburtsev.core.sktransformers import Count
from deepburtsev.core.sktransformers import Tfidf
from deepburtsev.core.transformers import FasttextVectorizer, ResultsCollector, Tokenizer, Lemmatizer, Lower, Speller
from deepburtsev.models.intent_classificators import WCNN, DCNN, BiGRU, BiLSTM, SelfAttMultBiLSTM, SelfAttAddBiLSTM
from deepburtsev.models.intent_classificators import CNN_BiLSTM, BiLSTM_CNN
from deepburtsev.models.skmodels import LinearRegression, LinearSVM, RandomForest

# data prepare
root = '/home/mks/projects/DeepBurtsev/'
file_path = join(root, 'data', 'russian', 'sber_faq', 'sber_faq.json')
with open(file_path, 'r') as f:
    dataset = json.load(f)
    f.close()

# create structure for pipeline manager
fasttext = FasttextVectorizer(request_names=['train', 'val', 'test'],
                              new_names=['train', 'val', 'test'],
                              dimension=300,
                              model_path='./embeddings/ft_native_300_ru_wiki_lenta_nltk_word_tokenize.bin')

tfidf = Tfidf(request_names=['train', 'val', 'test'], new_names=['train', 'val', 'test'])
count = Count(request_names=['train', 'val', 'test'], new_names=['train', 'val', 'test'])

neural_struct = [Lower(request_names=['train', 'val', 'test'], new_names=['train', 'val', 'test']),
                 Tokenizer(request_names=['train', 'val', 'test'], new_names=['train', 'val', 'test']),
                 [Speller(request_names=['train', 'val', 'test'], new_names=['train', 'val', 'test']), None],
                 [Lemmatizer(request_names=['train', 'val', 'test'], new_names=['train', 'val', 'test']), None],
                 fasttext,
                 [(WCNN,
                    {"search": True,
                     "new_names": "pred_test",
                     "predict_names": "test",
                     "epochs": [3, 5, 7, 10, 18],
                     "kernel_sizes_cnn": {"range": [1, 5],
                                          "discrete": True,
                                          "n_samples": 3,
                                          "increasing": True},
                     "filters_cnn": {"range": [32, 512],
                                     "discrete": True},
                     "confident_threshold": {"range": [0.4, 0.6]},
                     "lear_rate": {"range": [1e-2, 10],
                                   "scale": "log"},
                     "lear_rate_decay": {"range": [1e-1, 9e-1]},
                     "text_size": [15, 25, 30],
                     "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                      "scale": "log"},
                     "coef_reg_den": {"range": [1e-5, 1e-3],
                                      "scale": "log"},
                     "dropout_rate": {"range": [1e-1, 7e-1]},
                     "dense_size": {"range": [32, 128],
                                    "discrete": True},
                     "batch_size": {"range": [32, 64, 128],
                                    "discrete": True}}),
                    (DCNN,
                     {"search": True,
                      "new_names": "pred_test",
                      "predict_names": "test",
                      "epochs": [3, 5, 7, 10, 18],
                      "kernel_sizes_cnn": {"range": [1, 5],
                                           "discrete": True,
                                           "n_samples": 3,
                                           "increasing": True},
                      "filters_cnn": {"range": [32, 512],
                                      "discrete": True,
                                      "n_samples": 3,
                                      "increasing": True},
                      "confident_threshold": {"range": [0.4, 0.6]},
                      "lear_rate": {"range": [1e-2, 10],
                                    "scale": "log"},
                      "lear_rate_decay": {"range": [1e-1, 9e-1]},
                      "text_size": [15, 25, 30],
                      "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "coef_reg_den": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "dropout_rate": {"range": [1e-1, 7e-1]},
                      "dense_size": {"range": [32, 128],
                                     "discrete": True},
                      "batch_size": {"range": [32, 64],
                                     "discrete": True},
                      "last_activation": ['softmax', 'sigmoid']}),
                    (BiGRU,
                     {"search": True,
                      "new_names": "pred_test",
                      "predict_names": "test",
                      "epochs": [3, 5, 7, 10, 18],
                      "units_lstm": {"range": [32, 256],
                                     "discrete": True},
                      "confident_threshold": {"range": [0.4, 0.6]},
                      "lear_rate": {"range": [1e-2, 10],
                                    "scale": "log"},
                      "lear_rate_decay": {"range": [1e-1, 9e-1]},
                      "text_size": [15, 25, 30],
                      "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "coef_reg_den": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "dropout_rate": {"range": [1e-1, 7e-1]},
                      "dense_size": {"range": [32, 128],
                                     "discrete": True},
                      "batch_size": {"range": [32, 64],
                                     "discrete": True},
                      "last_activation": ['softmax', 'sigmoid']}),
                    (BiLSTM,
                     {"search": True,
                      "new_names": "pred_test",
                      "predict_names": "test",
                      "epochs": [3, 5, 7, 10, 18],
                      "units_lstm": {"range": [32, 256],
                                     "discrete": True},
                      "confident_threshold": {"range": [0.4, 0.6]},
                      "lear_rate": {"range": [1e-2, 10],
                                    "scale": "log"},
                      "lear_rate_decay": {"range": [1e-1, 9e-1]},
                      "text_size": [15, 25, 30],
                      "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "coef_reg_den": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "dropout_rate": {"range": [1e-1, 7e-1]},
                      "dense_size": {"range": [32, 128],
                                     "discrete": True},
                      "batch_size": {"range": [32, 64],
                                     "discrete": True},
                      "last_activation": ['softmax', 'sigmoid']}),
                    (SelfAttAddBiLSTM,
                     {"search": True,
                      "new_names": "pred_test",
                      "predict_names": "test",
                      "epochs": [3, 5, 7, 10, 18],
                      "units_lstm": {"range": [32, 256],
                                     "discrete": True},
                      "self_att_hid": {"range": [32, 128],
                                       "discrete": True},
                      "self_att_out": {"range": [32, 128],
                                       "discrete": True},
                      "confident_threshold": {"range": [0.4, 0.6]},
                      "lear_rate": {"range": [1e-2, 10],
                                    "scale": "log"},
                      "lear_rate_decay": {"range": [1e-1, 9e-1]},
                      "text_size": [15, 25, 30],
                      "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "coef_reg_den": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "dropout_rate": {"range": [1e-1, 7e-1]},
                      "dense_size": {"range": [32, 128],
                                     "discrete": True},
                      "batch_size": {"range": [32, 64],
                                     "discrete": True},
                      "last_activation": ['softmax', 'sigmoid']}),
                    (SelfAttMultBiLSTM,
                     {"search": True,
                      "new_names": "pred_test",
                      "predict_names": "test",
                      "epochs": [3, 5, 7, 10, 18],
                      "units_lstm": {"range": [32, 256],
                                     "discrete": True},
                      "self_att_hid": {"range": [32, 128],
                                       "discrete": True},
                      "self_att_out": {"range": [32, 128],
                                       "discrete": True},
                      "confident_threshold": {"range": [0.4, 0.6]},
                      "lear_rate": {"range": [1e-2, 10],
                                    "scale": "log"},
                      "lear_rate_decay": {"range": [1e-1, 9e-1]},
                      "text_size": [15, 25, 30],
                      "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "coef_reg_den": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "dropout_rate": {"range": [1e-1, 7e-1]},
                      "dense_size": {"range": [32, 128],
                                     "discrete": True},
                      "batch_size": {"range": [32, 64],
                                     "discrete": True},
                      "last_activation": ['softmax', 'sigmoid']}),
                    (CNN_BiLSTM,
                     {"search": True,
                      "new_names": "pred_test",
                      "predict_names": "test",
                      "epochs": [3, 5, 7, 10, 18],
                      "kernel_sizes_cnn": {"range": [1, 5],
                                           "discrete": True,
                                           "n_samples": 3,
                                           "increasing": True},
                      "filters_cnn": {"range": [32, 512],
                                      "discrete": True},
                      "units_lstm": {"range": [32, 256],
                                     "discrete": True},
                      "self_att_hid": {"range": [32, 128],
                                       "discrete": True},
                      "self_att_out": {"range": [32, 128],
                                       "discrete": True},
                      "confident_threshold": {"range": [0.4, 0.6]},
                      "lear_rate": {"range": [1e-2, 10],
                                    "scale": "log"},
                      "lear_rate_decay": {"range": [1e-1, 9e-1]},
                      "text_size": [15, 25, 30],
                      "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "coef_reg_den": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "dropout_rate": {"range": [1e-1, 7e-1]},
                      "dense_size": {"range": [32, 128],
                                     "discrete": True},
                      "batch_size": {"range": [32, 64],
                                     "discrete": True},
                      "last_activation": ['softmax', 'sigmoid']}),
                    (BiLSTM_CNN,
                     {"search": True,
                      "new_names": "pred_test",
                      "predict_names": "test",
                      "epochs": [3, 5, 7, 10, 18],
                      "kernel_sizes_cnn": {"range": [1, 5],
                                           "discrete": True,
                                           "n_samples": 3,
                                           "increasing": True},
                      "filters_cnn": {"range": [32, 512],
                                      "discrete": True},
                      "units_lstm": {"range": [32, 256],
                                     "discrete": True},
                      "self_att_hid": {"range": [32, 128],
                                       "discrete": True},
                      "self_att_out": {"range": [32, 128],
                                       "discrete": True},
                      "confident_threshold": {"range": [0.4, 0.6]},
                      "lear_rate": {"range": [1e-2, 10],
                                    "scale": "log"},
                      "lear_rate_decay": {"range": [1e-1, 9e-1]},
                      "text_size": [15, 25, 30],
                      "coef_reg_cnn": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "coef_reg_den": {"range": [1e-5, 1e-3],
                                       "scale": "log"},
                      "dropout_rate": {"range": [1e-1, 7e-1]},
                      "dense_size": {"range": [32, 128],
                                     "discrete": True},
                      "batch_size": {"range": [32, 64],
                                     "discrete": True},
                      "last_activation": ['softmax', 'sigmoid']})],
                 ResultsCollector]

linear_svm = [[tfidf, count], [(LinearSVM, {"search": True,
                                            "loss": ["squared_hinge", "hinge"],
                                            "tol": {"range": [0.0001, 0.1]},
                                            "C": {"range": [0.5, 2.0]},
                                            "fit_intercept": {"bool": True},
                                            "max_iter": [100, 150, 200],
                                            "multi_class": ["ovr", "crammer_singer"]}),
                               (RandomForest, {"search": True,
                                               "n_estimators": [10, 12, 14, 16, 18, 20],
                                               "criterion": ["gini", "entropy"],
                                               "max_features": ["auto", "sqrt", "log2", None],
                                               "oob_score": {"bool": True}}),
                               (LinearRegression, {"search": True,
                                                   "tol": {"range": [0.0001, 0.1]},
                                                   "C": {"range": [0.5, 2.0]},
                                                   "fit_intercept": {"bool": True},
                                                   "max_iter": [100, 150, 200],
                                                   "warm_start": {"bool": True}})],
              ResultsCollector]

neural_man = PipelineManager(dataset, neural_struct, 'sber_l', target_metric='f1_macro', hyper_search='random',
                             sample_num=20)
neural_man.run()

linear_sv = PipelineManager(dataset, linear_svm, 'sber_l', target_metric='f1_macro', hyper_search='random',
                            sample_num=20)
linear_sv.run()
